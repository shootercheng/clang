2018年 10月 15日 星期一 22:32:46 CST
C 语言存储类

auto存储类
	{
		int mount;
		auto int month;
	}
	auto存储类是所有局部变量默认的存储类
	auto只能用在函数内，即auto只能修饰局部变量

register存储类
	register 存储类用于定义存储在寄存器中而不是RAM中的局部变量。这意味着变量的最大尺寸等于起存器的大小，且
不能对它应用'&'运算符
	{
		register int aa;
	}
	寄存器只用于快速访问的变量，定义'register'并不意味者变量将被存储在寄存器中，变量可能存储在起存器
中。

static存储类
	static存储类指示编译器在程序的生命周期内保持局部变量的存在，而不需要在每次进入和离开作用域时进行创建和销毁

在C语言中局部变量被static修饰后，每次再调用的时候不会重置

extern存储类
	extern 存储类用于提供一个全局变量的引用，全局变量对所有程序文件都是可见。当使用extern时，对于无法初始化的变量名指向一个之前定义过的存储位置。
	当有多个文件定义了一个可以在其他文件中使用的全局变量或函数时，可以在其他文件中使用extern来得到已定义的变量或函数的引用。

GCC 同时编译2个有依赖的文件
scd@whale:~/codes/clang/day4$ vi externfun.c
scd@whale:~/codes/clang/day4$ vi main.c
scd@whale:~/codes/clang/day4$ gcc main.c externfun.c -o mainextern
	
